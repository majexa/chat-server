// Generated by CoffeeScript 1.11.1
(function() {
  var EventEmitter, Server;

  EventEmitter = require("events").EventEmitter;

  Server = (function() {
    function Server(config, app, db, io, jwt) {
      this.config = config;
      this.app = app;
      this.db = db;
      this.io = io;
      this.jwt = jwt;
      this.event = new EventEmitter();
      require('./routes/api/login')(this);
      require('./routes/api/user')(this);
      require('./routes/api/contacts')(this);
      require('./routes/api/message')(this);
      require('./routes/api/chat')(this);
      require('./routes/api/socket')(this);
      require('./routes/admin/login')(this);
      require('./routes/admin/users')(this);
      require('./routes/admin/contacts')(this);
      require('./routes/admin/stat')(this);
      require('./routes/debug')(this);
      require('./routes/doc')(this);
      require('./stat').startCollecting(this);
      require('./dev')(this);
    }

    Server.prototype.tokenReq = function(req, res, resCallback) {
      return this.jwt.verify(req.query.token, this.config.jwtSecret, function(err, decoded) {
        if (!err) {
          return resCallback(res, decoded);
        } else {
          return res.send(err);
        }
      });
    };

    Server.prototype.djb2Code = function(str) {
      var char, hash, i;
      hash = 5381;
      i = 0;
      while (i < str.length) {
        char = str.charCodeAt(i);
        hash = (hash << 5) + hash + char;
        i++;
      }
      return hash;
    };

    Server.prototype.chatName = function(fromUserId, toUserId) {
      var userId1, userId2;
      if (this.djb2Code(fromUserId) < this.djb2Code(toUserId)) {
        userId1 = fromUserId;
        userId2 = toUserId;
      } else {
        userId1 = toUserId;
        userId2 = fromUserId;
      }
      return 'chat-' + userId1 + '-' + userId2;
    };

    return Server;

  })();

  module.exports = Server;

}).call(this);

//# sourceMappingURL=Server.js.map
